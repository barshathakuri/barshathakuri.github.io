{"version":3,"sources":["webpack:///./src/app/hr/hr.component.html","webpack:///./src/app/hr/report/report.component.html","webpack:///./src/app/hr/staff/staff.component.html","webpack:///./src/app/hr/student/student.component.html","webpack:///./src/app/hr/teacher/teacher.component.html","webpack:///./src/app/hr/hr-routing.module.ts","webpack:///./src/app/hr/hr.component.scss","webpack:///./src/app/hr/hr.component.ts","webpack:///./src/app/hr/hr.module.ts","webpack:///./src/app/hr/report/report.component.scss","webpack:///./src/app/hr/report/report.component.ts","webpack:///./src/app/hr/report/services/report.service.ts","webpack:///./src/app/hr/staff/services/staff.service.ts","webpack:///./src/app/hr/staff/staff.component.scss","webpack:///./src/app/hr/staff/staff.component.ts","webpack:///./src/app/hr/student/services/student.service.ts","webpack:///./src/app/hr/student/student.component.scss","webpack:///./src/app/hr/student/student.component.ts","webpack:///./src/app/hr/teacher/services/teacher.service.ts","webpack:///./src/app/hr/teacher/teacher.component.scss","webpack:///./src/app/hr/teacher/teacher.component.ts","webpack:///./src/app/shared/services/base.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,yD;;;;;;;;;;;ACAA,4wEAA4wE,gbAAgb,oPAAoP,cAAc,kPAAkP,cAAc,0MAA0M,+b;;;;;;;;;;;ACAx4G,gpBAAgpB,sDAAsD,6mDAA6mD,0OAA0O,gBAAgB,2ZAA2Z,KAAK,icAAic,o8BAAo8B,0OAA0O,uBAAuB,gRAAgR,sBAAsB,qdAAqd,KAAK,gWAAgW,ymB;;;;;;;;;;;ACAnrL,opBAAopB,sDAAsD,inDAAinD,0OAA0O,kBAAkB,2ZAA2Z,KAAK,mcAAmc,0gCAA0gC,0OAA0O,uBAAuB,gRAAgR,sBAAsB,qdAAqd,KAAK,gWAAgW,ymB;;;;;;;;;;;ACArwL,opBAAopB,sDAAsD,inDAAinD,0OAA0O,kBAAkB,2ZAA2Z,KAAK,mcAAmc,0gCAA0gC,0OAA0O,uBAAuB,gRAAgR,sBAAsB,qdAAqd,KAAK,gWAAgW,ymB;;;;;;;;;;;;;;;;;;;;;;;ACA5tL;AACc;AAEV;AACY;AACG;AACG;AACA;AAE/D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;QACtB,IAAI,EAAE;YACJ,KAAK,EAAE,YAAY;SACpB;KACF;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IAED;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,wEAAe;KAC3B;CACF,CAAC;AAMF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAJ3B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;ACxC5B,+DAA+D,mI;;;;;;;;;;;;;;;;;ACAb;AAOlD,IAAa,WAAW,GAAxB,MAAa,WAAW;IACtB,gBAAe,CAAC;IAEhB,QAAQ,KAAI,CAAC;CACd;AAJY,WAAW;IALvB,+DAAS,CAAC;QACT,QAAQ,EAAE,QAAQ;QAClB,wIAAkC;;KAEnC,CAAC;;GACW,WAAW,CAIvB;AAJuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AACM;AAEF;AAEU;AAEA;AACD;AAET;AACY;AACK;AACF;AACK;AACtB;AACoB;AACK;AACL;AACK;AA0BpE,IAAa,QAAQ,GAArB,MAAa,QAAQ;CAAG;AAAX,QAAQ;IAxBpB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,oEAAS;YACT,kEAAe;YACf,4DAAY;SACb;QACD,YAAY,EAAE;YACZ,yDAAW;YACX,qEAAc;YACd,yEAAe;YACf,4EAAgB;YAChB,4EAAgB;SACjB;QAED,SAAS,EAAE;YACT,0EAAY;YACZ,8EAAa;YACb,wDAAQ;YACR,iFAAc;YACd,iFAAc;SACf;KACF,CAAC;GACW,QAAQ,CAAG;AAAH;;;;;;;;;;;;AC7CrB,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;ACAb;AACgB;AACT;AAGd;AACoB;AAO/D,IAAa,eAAe,GAA5B,MAAa,eAAe;IAS1B,YACS,aAA4B,EAC5B,MAAc,EACd,YAA4B,EAC3B,QAAkB,EAClB,YAA0B;QAJ3B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAgB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QAClB,iBAAY,GAAZ,YAAY,CAAc;QAXpC,SAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAIlB,cAAS,GAAG,EAAE,CAAC;QASb,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,QAAQ;QACN;YACE,IAAI,CAAM,CAAC;YACX,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAC1C,CAAC,IAAS,EAAE,EAAE;gBACZ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;iBAClE;gBACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBACjD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;YACzC,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC;CACF;;YA9ByB,6EAAa;YACpB,sDAAM;YACA,8DAAc;YACjB,wDAAQ;YACJ,0EAAY;;AAdzB,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,uJAAsC;;KAEvC,CAAC;2EAWwB,6EAAa;QACpB,sDAAM;QACA,8DAAc;QACjB,wDAAQ;QACJ,0EAAY;GAdzB,eAAe,CAwC3B;AAxC2B;;;;;;;;;;;;;;;;;;;;ACbe;AACO;AACa;AAG/D,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,4EAAW;IAG5C,YAAmB,IAAgB;QACjC,KAAK,CAAC,WAAW,CAAC,CAAC;QADF,SAAI,GAAJ,IAAI,CAAY;IAEnC,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAC3D,CAAC;CACF;;YAP0B,+DAAU;;AAHxB,aAAa;IADzB,gEAAU,EAAE;2EAIc,+DAAU;GAHxB,aAAa,CAUzB;AAVyB;;;;;;;;;;;;;;;;;;;;ACLiB;AACO;AACa;AAG/D,yDAAyD;AAGzD,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,4EAAW;IAC3C,YAAmB,IAAgB;QACjC,KAAK,CAAC,EAAE,CAAC,CAAC;QADO,SAAI,GAAJ,IAAI,CAAY;IAEnC,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,gDAAgD,EAChD,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,oDAAoD,EACpD,IAAI,EACJ,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,6DAA6D,EAC7D,EAAE,IAAI,EAAE,IAAI,EAAE,EACd,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,EAAE,EAAE,IAAI;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,sDAAsD,GAAG,EAAE,EAC3D,EAAE,SAAS,EAAE,IAAI,EAAE,EACnB,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;CACF;;YAlC0B,+DAAU;;AADxB,YAAY;IADxB,gEAAU,EAAE;2EAEc,+DAAU;GADxB,YAAY,CAmCxB;AAnCwB;;;;;;;;;;;;ACRzB,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;;ACAb;AACa;AACN;AACzD,2DAA2D;AACf;AAED;AAU3C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAQzB,YACS,YAA0B,EAC1B,MAAc,EACd,YAA4B,EAC3B,QAAkB;QAHnB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAgB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QAE1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC7D,iEAAiE;QACjE,oEAAoE;IACtE,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;QACf,IAAI,OAAO,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAEvE,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;QACtB,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;QAC1B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5D,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC;YACA,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC;IACN,CAAC;IAED,GAAG,CAAC,EAAE,EAAE,SAAS;QACf,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAE3B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACnE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACpC,CAAC,CAAC;YACA,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC;IACN,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE1D,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBAC1D,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,mBAAmB,CAAC;oBAC/C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrD;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;iBACnC;aACF;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhE,qDAAQ,CAAC,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,SAAS,CAC5C,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAEhC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YArFwB,0EAAY;YAClB,sDAAM;YACA,8DAAc;YACjB,wDAAQ;;AAZjB,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,oJAAqC;;KAEtC,CAAC;2EAUuB,0EAAY;QAClB,sDAAM;QACA,8DAAc;QACjB,wDAAQ;GAZjB,cAAc,CA8F1B;AA9F0B;;;;;;;;;;;;;;;;;;;;AChBgB;AACO;AACa;AAG/D,6DAA6D;AAG7D,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,4EAAW;IAC7C,YAAmB,IAAgB;QACjC,KAAK,CAAC,EAAE,CAAC,CAAC;QADO,SAAI,GAAJ,IAAI,CAAY;IAEnC,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,kDAAkD,EAClD,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,oDAAoD,EACpD,IAAI,EACJ,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,6DAA6D,EAC7D,EAAE,IAAI,EAAE,IAAI,EAAE,EACd,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,EAAE,EAAE,IAAI;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,sDAAsD,GAAG,EAAE,EAC3D,EAAE,SAAS,EAAE,IAAI,EAAE,EACnB,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;CACF;;YAlC0B,+DAAU;;AADxB,cAAc;IAD1B,gEAAU,EAAE;2EAEc,+DAAU;GADxB,cAAc,CAmC1B;AAnC0B;;;;;;;;;;;;ACR3B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;ACAb;AACmB;AACZ;AACzD,+DAA+D;AACnB;AAED;AAU3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAQ3B,YACS,cAA8B,EAC9B,MAAc,EACd,YAA4B,EAC3B,QAAkB;QAHnB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAgB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QAE1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC7D,iEAAiE;QACjE,oEAAoE;IACtE,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;QACf,IAAI,OAAO,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAE3E,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;QACxB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC9D,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC;YACA,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC;IACN,CAAC;IAED,GAAG,CAAC,EAAE,EAAE,SAAS;QACf,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAE3B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACpC,CAAC,CAAC;YACA,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC;IACN,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE1D,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBAC5D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,mBAAmB,CAAC;oBACjD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;iBACnC;aACF;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACzD,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAElE,qDAAQ,CAAC,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC,SAAS,CAC9C,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAEpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YArF0B,gFAAc;YACtB,sDAAM;YACA,8DAAc;YACjB,wDAAQ;;AAZjB,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,0JAAuC;;KAExC,CAAC;2EAUyB,gFAAc;QACtB,sDAAM;QACA,8DAAc;QACjB,wDAAQ;GAZjB,gBAAgB,CA8F5B;AA9F4B;;;;;;;;;;;;;;;;;;;;AChBc;AACO;AACa;AAG/D,6DAA6D;AAG7D,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,4EAAW;IAC7C,YAAmB,IAAgB;QACjC,KAAK,CAAC,EAAE,CAAC,CAAC;QADO,SAAI,GAAJ,IAAI,CAAY;IAEnC,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,kDAAkD,EAClD,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,oDAAoD,EACpD,IAAI,EACJ,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,6DAA6D,EAC7D,EAAE,IAAI,EAAE,IAAI,EAAE,EACd,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,EAAE,EAAE,IAAI;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,sDAAsD,GAAG,EAAE,EAC3D,EAAE,SAAS,EAAE,IAAI,EAAE,EACnB,IAAI,CAAC,mBAAmB,EAAE,CAC3B,CAAC;IACJ,CAAC;CACF;;YAlC0B,+DAAU;;AADxB,cAAc;IAD1B,gEAAU,EAAE;2EAEc,+DAAU;GADxB,cAAc,CAmC1B;AAnC0B;;;;;;;;;;;;ACR3B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;ACAb;AACmB;AACZ;AACzD,+DAA+D;AACnB;AAED;AAU3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAQ3B,YACS,cAA8B,EAC9B,MAAc,EACd,YAA4B,EAC3B,QAAkB;QAHnB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAgB;QAC3B,aAAQ,GAAR,QAAQ,CAAU;QAE1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC7D,iEAAiE;QACjE,oEAAoE;IACtE,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;QACf,IAAI,OAAO,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;QAE3E,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC;QACxB,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEzB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC9D,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC;YACA,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC;IACN,CAAC;IAED,GAAG,CAAC,EAAE,EAAE,SAAS;QACf,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAE3B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACpC,CAAC,CAAC;YACA,KAAK,CAAC,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACvC,CAAC,CAAC;IACN,CAAC;IAED,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAE1D,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBAC5D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,mBAAmB,CAAC;oBACjD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvD;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;iBACnC;aACF;SACF;IACH,CAAC;IAED,QAAQ;QACN,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACzD,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAElE,qDAAQ,CAAC,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC,SAAS,CAC9C,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAEpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxC,CAAC,CACF,CAAC;IACJ,CAAC;CACF;;YArF0B,gFAAc;YACtB,sDAAM;YACA,8DAAc;YACjB,wDAAQ;;AAZjB,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,0JAAuC;;KAExC,CAAC;2EAUyB,gFAAc;QACtB,sDAAM;QACA,8DAAc;QACjB,wDAAQ;GAZjB,gBAAgB,CA8F5B;AA9F4B;;;;;;;;;;;;;AChB7B;AAAA;AAAA;AAAA;AAAkE;AACf;AAE5C,MAAM,WAAW;IAEtB,YAAY,OAAe;QACzB,IAAI,CAAC,GAAG,GAAG,qEAAW,CAAC,OAAO,GAAG,OAAO,GAAG,GAAG,CAAC;IACjD,CAAC;IACD,UAAU;QACR,OAAO;YACL,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,MAAM,EAAE,kBAAkB;aAC3B,CAAC;SACH,CAAC;IACJ,CAAC;IAED,mBAAmB;QACjB,OAAO;YACL,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;aACnD,CAAC;SACH,CAAC;IACJ,CAAC;;;YAnBoB,MAAM","file":"hr-hr-module-es2015.js","sourcesContent":["module.exports = \"<p>\\r\\n  Hr process works!\\r\\n</p>\\r\\n\"","module.exports = \"<!-- Basic form layout section start -->\\r\\n<section id=\\\"horizontal-form-layouts\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">Attendance Report</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"px-3\\\">\\r\\n            <form\\r\\n              class=\\\"form form-horizontal\\\"\\r\\n              #newreportForm=\\\"ngForm\\\"\\r\\n              novalidate\\r\\n            >\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <h4 class=\\\"form-section\\\">\\r\\n                  <i class=\\\"ft-report\\\"></i> Date Today:\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                      >Date\\r\\n                    </label>\\r\\n                    <input\\r\\n                      type=\\\"date\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      id=\\\"DefaultSelect\\\"\\r\\n                      placeholder=\\\"Select date\\\"\\r\\n                      name=\\\"date\\\"\\r\\n                      [(ngModel)]=\\\"newreport.date\\\"\\r\\n                      #date=\\\"ngModel\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                      >User Type\\r\\n                    </label>\\r\\n                    <select\\r\\n                      class=\\\"form-control\\\"\\r\\n                      id=\\\"DefaultSelect\\\"\\r\\n                      placeholder=\\\" Select a User Type\\\"\\r\\n                      name=\\\"type\\\"\\r\\n                      [(ngModel)]=\\\"newreport.type\\\"\\r\\n                      #type=\\\"ngModel\\\"\\r\\n                      required\\r\\n                    >\\r\\n                      <option value=\\\"Report\\\">Staff</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      style=\\\"margin: 30px 40px;\\\"\\r\\n                      class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                      (click)=\\\"generate()\\\"\\r\\n                    >\\r\\n                      <i class=\\\"ft ft-report-check\\\"></i> Generate Report\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div\\r\\n                  class=\\\"form-group row\\\"\\r\\n                  *ngFor=\\\"let staff of staffList; index as i\\\"\\r\\n                >\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                      >Date\\r\\n                    </label>\\r\\n                    {{ staff.date }}\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                      >Name\\r\\n                    </label>\\r\\n                    {{ staff.name }}\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      style=\\\"margin: 30px 40px;\\\"\\r\\n                      class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                    >\\r\\n                      <i class=\\\"ft ft-report-check\\\"></i> Generate Report\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<!-- // Basic form layout section end -->\\r\\n\"","module.exports = \"<!-- Basic form layout section start -->\\r\\n<section id=\\\"horizontal-form-layouts\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">Attendance Details</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"px-3\\\">\\r\\n            <div class=\\\"staff\\\">\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <h4 class=\\\"form-section\\\">\\r\\n                  <i class=\\\"ft-staff\\\"></i> <b>Today's Date:</b>\\r\\n                  {{ this.datePipe.transform(this.date, \\\"mediumDate\\\") }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-2 label-control\\\" required\\r\\n                    ><b>DATE:</b>\\r\\n                  </label>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <input\\r\\n                      type=\\\"date\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\"Date \\\"\\r\\n                      name=\\\"dates\\\"\\r\\n                      [(ngModel)]=\\\"date\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-outline-success mr-1\\\"\\r\\n                      (click)=\\\"selectDate()\\\"\\r\\n                    >\\r\\n                      <i class=\\\"ft ft-report-check\\\"></i> Select Date\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!--Pills Starts-->\\r\\n      <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n        <ngb-tabset type=\\\"pills\\\">\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Check </b>In </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div\\r\\n                      class=\\\"form-group row\\\"\\r\\n                      *ngFor=\\\"let staff of staffList; index as i\\\"\\r\\n                    >\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                        </label>\\r\\n                        {{ staff.f_name }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                          >Time\\r\\n                        </label>\\r\\n                        <input\\r\\n                          type=\\\"time\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          name=\\\"checkin{{ i }}\\\"\\r\\n                          [(ngModel)]=\\\"staff.checkin\\\"\\r\\n                          #checkInTime=\\\"ngModel\\\"\\r\\n                          value=\\\"10:00:00\\\"\\r\\n                          required\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"margin: 30px 40px;\\\"\\r\\n                          [disabled]=\\\"staff.status\\\"\\r\\n                          class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                          (click)=\\\"in(staff._id, staff.checkin, staff.f_name)\\\"\\r\\n                        >\\r\\n                          <i class=\\\"ft ft-report-check\\\"></i> Check In\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Check</b> out</ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div\\r\\n                      class=\\\"form-group row\\\"\\r\\n                      *ngFor=\\\"let checkedIn of checkedInList; index as i\\\"\\r\\n                    >\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                        </label>\\r\\n                        {{ checkedIn.user_name }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                          Checked In\\r\\n                        </label>\\r\\n                        {{ checkedIn.check_in }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                          >Time\\r\\n                        </label>\\r\\n                        <input\\r\\n                          type=\\\"time\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          placeholder=\\\"Select Time\\\"\\r\\n                          name=\\\"checkout{{ i }}\\\"\\r\\n                          [(ngModel)]=\\\"checkedIn.checkout\\\"\\r\\n                          required\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"margin: 30px 40px;\\\"\\r\\n                          class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                          (click)=\\\"out(checkedIn._id, checkedIn.checkout)\\\"\\r\\n                        >\\r\\n                          <i class=\\\"ft ft-report-check\\\"></i> Check Out\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n        </ngb-tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<!-- // Basic form layout section end -->\\r\\n\"","module.exports = \"<!-- Basic form layout section start -->\\r\\n<section id=\\\"horizontal-form-layouts\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">Attendance Details</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"px-3\\\">\\r\\n            <div class=\\\"student\\\">\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <h4 class=\\\"form-section\\\">\\r\\n                  <i class=\\\"ft-student\\\"></i> <b>Today's Date:</b>\\r\\n                  {{ this.datePipe.transform(this.date, \\\"mediumDate\\\") }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-2 label-control\\\" required\\r\\n                    ><b>DATE:</b>\\r\\n                  </label>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <input\\r\\n                      type=\\\"date\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\"Date \\\"\\r\\n                      name=\\\"dates\\\"\\r\\n                      [(ngModel)]=\\\"date\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-outline-success mr-1\\\"\\r\\n                      (click)=\\\"selectDate()\\\"\\r\\n                    >\\r\\n                      <i class=\\\"ft ft-report-check\\\"></i> Select Date\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!--Pills Starts-->\\r\\n      <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n        <ngb-tabset type=\\\"pills\\\">\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Check </b>In </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div\\r\\n                      class=\\\"form-group row\\\"\\r\\n                      *ngFor=\\\"let student of studentList; index as i\\\"\\r\\n                    >\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                        </label>\\r\\n                        {{ student.f_name }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                          >Time\\r\\n                        </label>\\r\\n                        <input\\r\\n                          type=\\\"time\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          name=\\\"checkin{{ i }}\\\"\\r\\n                          [(ngModel)]=\\\"student.checkin\\\"\\r\\n                          #checkInTime=\\\"ngModel\\\"\\r\\n                          value=\\\"10:00:00\\\"\\r\\n                          required\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"margin: 30px 40px;\\\"\\r\\n                          [disabled]=\\\"student.status\\\"\\r\\n                          class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                          (click)=\\\"\\r\\n                            in(student._id, student.checkin, student.f_name)\\r\\n                          \\\"\\r\\n                        >\\r\\n                          <i class=\\\"ft ft-report-check\\\"></i> Check In\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Check</b> out</ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div\\r\\n                      class=\\\"form-group row\\\"\\r\\n                      *ngFor=\\\"let checkedIn of checkedInList; index as i\\\"\\r\\n                    >\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                        </label>\\r\\n                        {{ checkedIn.user_name }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                          Checked In\\r\\n                        </label>\\r\\n                        {{ checkedIn.check_in }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                          >Time\\r\\n                        </label>\\r\\n                        <input\\r\\n                          type=\\\"time\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          placeholder=\\\"Select Time\\\"\\r\\n                          name=\\\"checkout{{ i }}\\\"\\r\\n                          [(ngModel)]=\\\"checkedIn.checkout\\\"\\r\\n                          required\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"margin: 30px 40px;\\\"\\r\\n                          class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                          (click)=\\\"out(checkedIn._id, checkedIn.checkout)\\\"\\r\\n                        >\\r\\n                          <i class=\\\"ft ft-report-check\\\"></i> Check Out\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n        </ngb-tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<!-- // Basic form layout section end -->\\r\\n\"","module.exports = \"<!-- Basic form layout section start -->\\r\\n<section id=\\\"horizontal-form-layouts\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">Attendance Details</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"px-3\\\">\\r\\n            <div class=\\\"teacher\\\">\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <h4 class=\\\"form-section\\\">\\r\\n                  <i class=\\\"ft-teacher\\\"></i> <b>Today's Date:</b>\\r\\n                  {{ this.datePipe.transform(this.date, \\\"mediumDate\\\") }}\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label class=\\\"col-md-2 label-control\\\" required\\r\\n                    ><b>DATE:</b>\\r\\n                  </label>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <input\\r\\n                      type=\\\"date\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\"Date \\\"\\r\\n                      name=\\\"dates\\\"\\r\\n                      [(ngModel)]=\\\"date\\\"\\r\\n                      required\\r\\n                    />\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      class=\\\"btn btn-outline-success mr-1\\\"\\r\\n                      (click)=\\\"selectDate()\\\"\\r\\n                    >\\r\\n                      <i class=\\\"ft ft-report-check\\\"></i> Select Date\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!--Pills Starts-->\\r\\n      <div class=\\\"col-md-12 col-lg-12\\\">\\r\\n        <ngb-tabset type=\\\"pills\\\">\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Check </b>In </ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div\\r\\n                      class=\\\"form-group row\\\"\\r\\n                      *ngFor=\\\"let teacher of teacherList; index as i\\\"\\r\\n                    >\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                        </label>\\r\\n                        {{ teacher.f_name }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                          >Time\\r\\n                        </label>\\r\\n                        <input\\r\\n                          type=\\\"time\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          name=\\\"checkin{{ i }}\\\"\\r\\n                          [(ngModel)]=\\\"teacher.checkin\\\"\\r\\n                          #checkInTime=\\\"ngModel\\\"\\r\\n                          value=\\\"10:00:00\\\"\\r\\n                          required\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"margin: 30px 40px;\\\"\\r\\n                          [disabled]=\\\"teacher.status\\\"\\r\\n                          class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                          (click)=\\\"\\r\\n                            in(teacher._id, teacher.checkin, teacher.f_name)\\r\\n                          \\\"\\r\\n                        >\\r\\n                          <i class=\\\"ft ft-report-check\\\"></i> Check In\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n\\r\\n          <ngb-tab>\\r\\n            <ng-template ngbTabTitle><b>Check</b> out</ng-template>\\r\\n            <ng-template ngbTabContent>\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-content\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div\\r\\n                      class=\\\"form-group row\\\"\\r\\n                      *ngFor=\\\"let checkedIn of checkedInList; index as i\\\"\\r\\n                    >\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                        </label>\\r\\n                        {{ checkedIn.user_name }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\">\\r\\n                          Checked In\\r\\n                        </label>\\r\\n                        {{ checkedIn.check_in }}\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <label class=\\\"label-control\\\" for=\\\"projectinput\\\"\\r\\n                          >Time\\r\\n                        </label>\\r\\n                        <input\\r\\n                          type=\\\"time\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          placeholder=\\\"Select Time\\\"\\r\\n                          name=\\\"checkout{{ i }}\\\"\\r\\n                          [(ngModel)]=\\\"checkedIn.checkout\\\"\\r\\n                          required\\r\\n                        />\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"margin: 30px 40px;\\\"\\r\\n                          class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                          (click)=\\\"out(checkedIn._id, checkedIn.checkout)\\\"\\r\\n                        >\\r\\n                          <i class=\\\"ft ft-report-check\\\"></i> Check Out\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-template>\\r\\n          </ngb-tab>\\r\\n        </ngb-tabset>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<!-- // Basic form layout section end -->\\r\\n\"","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { HrComponent } from \"./hr.component\";\r\nimport { StaffComponent } from \"./staff/staff.component\";\r\nimport { ReportComponent } from \"./report/report.component\";\r\nimport { StudentComponent } from \"./student/student.component\";\r\nimport { TeacherComponent } from \"./teacher/teacher.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: HrComponent,\r\n    data: {\r\n      title: \"Hr Process\"\r\n    }\r\n  },\r\n  {\r\n    path: \"staff\",\r\n    component: StaffComponent\r\n  },\r\n\r\n  {\r\n    path: \"student\",\r\n    component: StudentComponent\r\n  },\r\n  {\r\n    path: \"teacher\",\r\n    component: TeacherComponent\r\n  },\r\n  {\r\n    path: \"report\",\r\n    component: ReportComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HrRoutingModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL2hyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-hr\",\r\n  templateUrl: \"./hr.component.html\",\r\n  styleUrls: [\"./hr.component.scss\"]\r\n})\r\nexport class HrComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HrRoutingModule } from \"./hr-routing.module\";\r\n\r\nimport { HrComponent } from \"./hr.component\";\r\nimport { StaffComponent } from \"./staff/staff.component\";\r\nimport { StaffService } from \"./staff/services/staff.service\";\r\nimport { ReportComponent } from \"./report/report.component\";\r\nimport { ReportService } from \"./report/services/report.service\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { StudentComponent } from \"./student/student.component\";\r\nimport { StudentService } from \"./student/services/student.service\";\r\nimport { TeacherComponent } from \"./teacher/teacher.component\";\r\nimport { TeacherService } from \"./teacher/services/teacher.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HrRoutingModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    HrComponent,\r\n    StaffComponent,\r\n    ReportComponent,\r\n    StudentComponent,\r\n    TeacherComponent\r\n  ],\r\n\r\n  providers: [\r\n    StaffService,\r\n    ReportService,\r\n    DatePipe,\r\n    StudentService,\r\n    TeacherService\r\n  ]\r\n})\r\nexport class HrModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL3JlcG9ydC9yZXBvcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ReportService } from \"../report/services/report.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport swal from \"sweetalert2\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { StaffService } from \"../staff/services/staff.service\";\r\n\r\n@Component({\r\n  selector: \"app-report\",\r\n  templateUrl: \"./report.component.html\",\r\n  styleUrls: [\"./report.component.scss\"]\r\n})\r\nexport class ReportComponent implements OnInit {\r\n  newreport;\r\n\r\n  date = Date.now();\r\n\r\n  submitting: boolean;\r\n\r\n  staffList = [];\r\n\r\n  constructor(\r\n    public reportservice: ReportService,\r\n    public router: Router,\r\n    public activeRouter: ActivatedRoute,\r\n    private datePipe: DatePipe,\r\n    private staffservice: StaffService\r\n  ) {\r\n    this.newreport = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    {\r\n      let i: any;\r\n      this.staffservice.getAgencystaff().subscribe(\r\n        (data: any) => {\r\n          for (i = 0; i < data.length; i++) {\r\n            this.staffList.push({ name: data[i].name, user_id: data[i].id });\r\n          }\r\n          console.log(\"NAMESSSS IN LIST \", this.staffList);\r\n          this.newreport.report = this.staffList;\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    console.log(\"Submitted>>>>>>>>>\", this.newreport);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseService } from \"app/shared/services/base.service\";\r\n\r\n@Injectable()\r\nexport class ReportService extends BaseService {\r\n  testurl;\r\n\r\n  constructor(public http: HttpClient) {\r\n    super(\"hr/report\");\r\n  }\r\n\r\n  sendDate(data) {\r\n    return this.http.post(this.url, data, this.getOptions());\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseService } from \"app/shared/services/base.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n// import { Staff } from \"app/shared/models/staff.model\";\r\n\r\n@Injectable()\r\nexport class StaffService extends BaseService {\r\n  constructor(public http: HttpClient) {\r\n    super(\"\");\r\n  }\r\n\r\n  getAgencystaff() {\r\n    return this.http.get(\r\n      \"http://192.168.10.22:8000/admin/get-staff-list\",\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  addCheckin(data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/checkin\",\r\n      data,\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  getCheckinList(data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/get-checkin-list\",\r\n      { date: data },\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  addCheckout(id, data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/checkout/\" + id,\r\n      { check_out: data },\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL3N0YWZmL3N0YWZmLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { StaffService } from \"../staff/services/staff.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n// import { Staff } from \"../../shared/models/staff.model\";\r\nimport { Observable, forkJoin } from \"rxjs\";\r\n\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\nimport swal from \"sweetalert2\";\r\nimport { analyzeAndValidateNgModules } from \"@angular/compiler\";\r\n\r\n@Component({\r\n  selector: \"app-staff\",\r\n  templateUrl: \"./staff.component.html\",\r\n  styleUrls: [\"./staff.component.scss\"]\r\n})\r\nexport class StaffComponent implements OnInit {\r\n  checkIn;\r\n  checkedInList;\r\n  attendance;\r\n  date;\r\n  submitting: boolean;\r\n  staffList;\r\n\r\n  constructor(\r\n    public staffservice: StaffService,\r\n    public router: Router,\r\n    public activeRouter: ActivatedRoute,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.staffList = [];\r\n    this.checkedInList = [];\r\n\r\n    this.date = new Date();\r\n\r\n    this.date = this.datePipe.transform(this.date, \"yyyy-MM-dd\");\r\n    // console.log(this.datePipe.transform(this.date, 'yyyy-MM-dd'));\r\n    // this.myDate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');\r\n  }\r\n\r\n  selectDate() {\r\n    console.log(this.date);\r\n\r\n    this.ngOnInit();\r\n  }\r\n\r\n  in(id, time, name) {\r\n    var checkIn = { staff_id: \"\", staff_name: \"\", check_in: \"\", date: \"\" };\r\n\r\n    checkIn.staff_id = id;\r\n    checkIn.staff_name = name;\r\n    checkIn.check_in = time;\r\n    checkIn.date = this.date;\r\n\r\n    console.log(\"CheckIN Object\", checkIn);\r\n\r\n    this.staffservice.addCheckin(checkIn).subscribe((data: any) => {\r\n      console.log(\"Added Successfully\");\r\n      this.ngOnInit();\r\n    }),\r\n      error => {\r\n        console.log(\" Adding Failed\", error);\r\n      };\r\n  }\r\n\r\n  out(id, check_out) {\r\n    console.log(check_out, id);\r\n\r\n    this.staffservice.addCheckout(id, check_out).subscribe((data: any) => {\r\n      console.log(\"Added Successfully\");\r\n    }),\r\n      error => {\r\n        console.log(\" Adding Failed\", error);\r\n      };\r\n  }\r\n\r\n  isCheckedIn() {\r\n    console.log(\"stafffList>\", this.staffList);\r\n    console.log(\"Already Checked IN--->\", this.checkedInList);\r\n\r\n    let i;\r\n    let j;\r\n    for (i = 0; i < this.staffList.length; i++) {\r\n      for (j = 0; j < this.checkedInList.length; j++) {\r\n        if (this.staffList[i]._id == this.checkedInList[j].user_id) {\r\n          this.staffList[i].status = \"checkedInForToday\";\r\n          console.log(\"Property added of\", this.staffList[i]);\r\n        } else {\r\n          console.log(\"Property not added\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let staffHTTP = this.staffservice.getAgencystaff();\r\n    let checkedInHTTP = this.staffservice.getCheckinList(this.date);\r\n\r\n    forkJoin([staffHTTP, checkedInHTTP]).subscribe(\r\n      (datas: any) => {\r\n        this.staffList = datas[0].staff;\r\n\r\n        this.checkedInList = datas[1].data;\r\n        this.isCheckedIn();\r\n      },\r\n      error => {\r\n        console.log(\"could not fetch\", error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseService } from \"app/shared/services/base.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n// import { Student } from \"app/shared/models/student.model\";\r\n\r\n@Injectable()\r\nexport class StudentService extends BaseService {\r\n  constructor(public http: HttpClient) {\r\n    super(\"\");\r\n  }\r\n\r\n  getAgencystudent() {\r\n    return this.http.get(\r\n      \"http://192.168.10.22:8000/admin/get-student-list\",\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  addCheckin(data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/checkin\",\r\n      data,\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  getCheckinList(data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/get-checkin-list\",\r\n      { date: data },\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  addCheckout(id, data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/checkout/\" + id,\r\n      { check_out: data },\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL3N0dWRlbnQvc3R1ZGVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { StudentService } from \"../student/services/student.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n// import { Student } from \"../../shared/models/student.model\";\r\nimport { Observable, forkJoin } from \"rxjs\";\r\n\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\nimport swal from \"sweetalert2\";\r\nimport { analyzeAndValidateNgModules } from \"@angular/compiler\";\r\n\r\n@Component({\r\n  selector: \"app-student\",\r\n  templateUrl: \"./student.component.html\",\r\n  styleUrls: [\"./student.component.scss\"]\r\n})\r\nexport class StudentComponent implements OnInit {\r\n  checkIn;\r\n  checkedInList;\r\n  attendance;\r\n  date;\r\n  submitting: boolean;\r\n  studentList;\r\n\r\n  constructor(\r\n    public studentservice: StudentService,\r\n    public router: Router,\r\n    public activeRouter: ActivatedRoute,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.studentList = [];\r\n    this.checkedInList = [];\r\n\r\n    this.date = new Date();\r\n\r\n    this.date = this.datePipe.transform(this.date, \"yyyy-MM-dd\");\r\n    // console.log(this.datePipe.transform(this.date, 'yyyy-MM-dd'));\r\n    // this.myDate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');\r\n  }\r\n\r\n  selectDate() {\r\n    console.log(this.date);\r\n\r\n    this.ngOnInit();\r\n  }\r\n\r\n  in(id, time, name) {\r\n    var checkIn = { student_id: \"\", student_name: \"\", check_in: \"\", date: \"\" };\r\n\r\n    checkIn.student_id = id;\r\n    checkIn.student_name = name;\r\n    checkIn.check_in = time;\r\n    checkIn.date = this.date;\r\n\r\n    console.log(\"CheckIN Object\", checkIn);\r\n\r\n    this.studentservice.addCheckin(checkIn).subscribe((data: any) => {\r\n      console.log(\"Added Successfully\");\r\n      this.ngOnInit();\r\n    }),\r\n      error => {\r\n        console.log(\" Adding Failed\", error);\r\n      };\r\n  }\r\n\r\n  out(id, check_out) {\r\n    console.log(check_out, id);\r\n\r\n    this.studentservice.addCheckout(id, check_out).subscribe((data: any) => {\r\n      console.log(\"Added Successfully\");\r\n    }),\r\n      error => {\r\n        console.log(\" Adding Failed\", error);\r\n      };\r\n  }\r\n\r\n  isCheckedIn() {\r\n    console.log(\"studentfList>\", this.studentList);\r\n    console.log(\"Already Checked IN--->\", this.checkedInList);\r\n\r\n    let i;\r\n    let j;\r\n    for (i = 0; i < this.studentList.length; i++) {\r\n      for (j = 0; j < this.checkedInList.length; j++) {\r\n        if (this.studentList[i]._id == this.checkedInList[j].user_id) {\r\n          this.studentList[i].status = \"checkedInForToday\";\r\n          console.log(\"Property added of\", this.studentList[i]);\r\n        } else {\r\n          console.log(\"Property not added\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let studentHTTP = this.studentservice.getAgencystudent();\r\n    let checkedInHTTP = this.studentservice.getCheckinList(this.date);\r\n\r\n    forkJoin([studentHTTP, checkedInHTTP]).subscribe(\r\n      (datas: any) => {\r\n        this.studentList = datas[0].student;\r\n\r\n        this.checkedInList = datas[1].data;\r\n        this.isCheckedIn();\r\n      },\r\n      error => {\r\n        console.log(\"could not fetch\", error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseService } from \"app/shared/services/base.service\";\r\nimport { environment } from \"environments/environment\";\r\n\r\n// import { Teacher } from \"app/shared/models/teacher.model\";\r\n\r\n@Injectable()\r\nexport class TeacherService extends BaseService {\r\n  constructor(public http: HttpClient) {\r\n    super(\"\");\r\n  }\r\n\r\n  getAgencyteacher() {\r\n    return this.http.get(\r\n      \"http://192.168.10.22:8000/admin/get-teacher-list\",\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  addCheckin(data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/checkin\",\r\n      data,\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  getCheckinList(data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/get-checkin-list\",\r\n      { date: data },\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n\r\n  addCheckout(id, data) {\r\n    return this.http.post(\r\n      \"http://192.168.10.22:8000/admin/attendance/checkout/\" + id,\r\n      { check_out: data },\r\n      this.getOptionsWithToken()\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL3RlYWNoZXIvdGVhY2hlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { TeacherService } from \"../teacher/services/teacher.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n// import { Teacher } from \"../../shared/models/teacher.model\";\r\nimport { Observable, forkJoin } from \"rxjs\";\r\n\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\nimport swal from \"sweetalert2\";\r\nimport { analyzeAndValidateNgModules } from \"@angular/compiler\";\r\n\r\n@Component({\r\n  selector: \"app-teacher\",\r\n  templateUrl: \"./teacher.component.html\",\r\n  styleUrls: [\"./teacher.component.scss\"]\r\n})\r\nexport class TeacherComponent implements OnInit {\r\n  checkIn;\r\n  checkedInList;\r\n  attendance;\r\n  date;\r\n  submitting: boolean;\r\n  teacherList;\r\n\r\n  constructor(\r\n    public teacherservice: TeacherService,\r\n    public router: Router,\r\n    public activeRouter: ActivatedRoute,\r\n    private datePipe: DatePipe\r\n  ) {\r\n    this.teacherList = [];\r\n    this.checkedInList = [];\r\n\r\n    this.date = new Date();\r\n\r\n    this.date = this.datePipe.transform(this.date, \"yyyy-MM-dd\");\r\n    // console.log(this.datePipe.transform(this.date, 'yyyy-MM-dd'));\r\n    // this.myDate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');\r\n  }\r\n\r\n  selectDate() {\r\n    console.log(this.date);\r\n\r\n    this.ngOnInit();\r\n  }\r\n\r\n  in(id, time, name) {\r\n    var checkIn = { teacher_id: \"\", teacher_name: \"\", check_in: \"\", date: \"\" };\r\n\r\n    checkIn.teacher_id = id;\r\n    checkIn.teacher_name = name;\r\n    checkIn.check_in = time;\r\n    checkIn.date = this.date;\r\n\r\n    console.log(\"CheckIN Object\", checkIn);\r\n\r\n    this.teacherservice.addCheckin(checkIn).subscribe((data: any) => {\r\n      console.log(\"Added Successfully\");\r\n      this.ngOnInit();\r\n    }),\r\n      error => {\r\n        console.log(\" Adding Failed\", error);\r\n      };\r\n  }\r\n\r\n  out(id, check_out) {\r\n    console.log(check_out, id);\r\n\r\n    this.teacherservice.addCheckout(id, check_out).subscribe((data: any) => {\r\n      console.log(\"Added Successfully\");\r\n    }),\r\n      error => {\r\n        console.log(\" Adding Failed\", error);\r\n      };\r\n  }\r\n\r\n  isCheckedIn() {\r\n    console.log(\"teacherfList>\", this.teacherList);\r\n    console.log(\"Already Checked IN--->\", this.checkedInList);\r\n\r\n    let i;\r\n    let j;\r\n    for (i = 0; i < this.teacherList.length; i++) {\r\n      for (j = 0; j < this.checkedInList.length; j++) {\r\n        if (this.teacherList[i]._id == this.checkedInList[j].user_id) {\r\n          this.teacherList[i].status = \"checkedInForToday\";\r\n          console.log(\"Property added of\", this.teacherList[i]);\r\n        } else {\r\n          console.log(\"Property not added\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    let teacherHTTP = this.teacherservice.getAgencyteacher();\r\n    let checkedInHTTP = this.teacherservice.getCheckinList(this.date);\r\n\r\n    forkJoin([teacherHTTP, checkedInHTTP]).subscribe(\r\n      (datas: any) => {\r\n        this.teacherList = datas[0].teacher;\r\n\r\n        this.checkedInList = datas[1].data;\r\n        this.isCheckedIn();\r\n      },\r\n      error => {\r\n        console.log(\"could not fetch\", error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { environment } from \"./../../../environments/environment\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\n\r\nexport class BaseService {\r\n  url;\r\n  constructor(PostUrl: String) {\r\n    this.url = environment.BaseUrl + PostUrl + \"/\";\r\n  }\r\n  getOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      })\r\n    };\r\n  }\r\n\r\n  getOptionsWithToken() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: localStorage.getItem(\"login_token\")\r\n      })\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":""}