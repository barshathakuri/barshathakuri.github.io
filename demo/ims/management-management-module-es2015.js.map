{"version":3,"sources":["webpack:///./src/app/enquiry/management/add-management/add-management.component.html","webpack:///./src/app/enquiry/management/edit-management/edit-management.component.html","webpack:///./src/app/enquiry/management/management.component.html","webpack:///./src/app/enquiry/management/add-management/add-management.component.scss","webpack:///./src/app/enquiry/management/add-management/add-management.component.ts","webpack:///./src/app/enquiry/management/edit-management/edit-management.component.scss","webpack:///./src/app/enquiry/management/edit-management/edit-management.component.ts","webpack:///./src/app/enquiry/management/management-routing.module.ts","webpack:///./src/app/enquiry/management/management.component.scss","webpack:///./src/app/enquiry/management/management.component.ts","webpack:///./src/app/enquiry/management/management.module.ts","webpack:///./src/app/enquiry/management/services/management.service.ts","webpack:///./src/app/shared/models/management.model.ts"],"names":[],"mappings":"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","file":"management-management-module-es2015.js","sourcesContent":["module.exports = \"<!-- Basic form layout section start -->\\r\\n<section id=\\\"horizontal-form-layouts\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">Add New Enquiry Category</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"px-3\\\">\\r\\n            <form\\r\\n              class=\\\"form form-horizontal\\\"\\r\\n              #newmanagementForm=\\\"ngForm\\\"\\r\\n              novalidate\\r\\n            >\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <h4 class=\\\"form-section\\\">\\r\\n                  <i class=\\\"ft-management\\\"></i>New Enquiry Category Details\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label\\r\\n                    class=\\\"col-md-3 label-control\\\"\\r\\n                    for=\\\"projectinput1\\\"\\r\\n                    required\\r\\n                    >Category Name\\r\\n                  </label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      id=\\\"projectinput1\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\" Enter Name\\\"\\r\\n                      name=\\\"mname\\\"\\r\\n                      [(ngModel)]=\\\"newmanagement.mname\\\"\\r\\n                      #name=\\\"ngModel\\\"\\r\\n                      required\\r\\n                    />\\r\\n                    <div\\r\\n                      class=\\\"danger\\\"\\r\\n                      *ngIf=\\\"mname.invalid && (mname.dirty || mname.touched)\\\"\\r\\n                    >\\r\\n                      required field*\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <fieldset>\\r\\n                  <div class=\\\"input-group\\\" style=\\\"margin-left:26%;\\\">\\r\\n                    <!-- <span class=\\\"input-group-text\\\" id=\\\"checkbox-addon1\\\"> -->\\r\\n                    <input\\r\\n                      type=\\\"checkbox\\\"\\r\\n                      aria-label=\\\"Checkbox for following text input\\\"\\r\\n                      style=\\\"margin-top: 5px;\\\"\\r\\n                      name=\\\"status\\\"\\r\\n                      [(ngModel)]=\\\"newmanagement.status\\\"\\r\\n                      #status=\\\"ngModel\\\"\\r\\n                    />\\r\\n                    Active\\r\\n                    <!-- </span> -->\\r\\n                  </div>\\r\\n                </fieldset>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-actions center\\\">\\r\\n                <button\\r\\n                  [disabled]=\\\"newmanagementForm.invalid\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                  (click)=\\\"submit()\\\"\\r\\n                >\\r\\n                  <i class=\\\"ft ft-management-check\\\"></i> Add New Categories\\r\\n                  Management\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-raised btn-danger\\\"\\r\\n                  routerLink=\\\"/enquiry/management\\\"\\r\\n                >\\r\\n                  <i class=\\\"ft ft-x\\\"></i> Go Back\\r\\n                </button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<!-- // Basic form layout section end -->\\r\\n\"","module.exports = \"<!-- Basic form layout section start -->\\r\\n<section id=\\\"horizontal-form-layouts\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">update Enquiry Category</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"px-3\\\">\\r\\n            <form\\r\\n              class=\\\"form form-horizontal\\\"\\r\\n              #newmanagementForm=\\\"ngForm\\\"\\r\\n              novalidate\\r\\n            >\\r\\n              <div class=\\\"form-body\\\">\\r\\n                <h4 class=\\\"form-section\\\">\\r\\n                  <i class=\\\"ft-management\\\"></i> Enquiry Category Details\\r\\n                </h4>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label\\r\\n                    class=\\\"col-md-3 label-control\\\"\\r\\n                    for=\\\"projectinput1\\\"\\r\\n                    required\\r\\n                    >Category Name\\r\\n                  </label>\\r\\n                  <div class=\\\"col-md-9\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      id=\\\"projectinput1\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\" Enter Name\\\"\\r\\n                      name=\\\"mname\\\"\\r\\n                      [(ngModel)]=\\\"newmanagement.mname\\\"\\r\\n                      #mname=\\\"ngModel\\\"\\r\\n                      required\\r\\n                    />\\r\\n                    <div\\r\\n                      class=\\\"danger\\\"\\r\\n                      *ngIf=\\\"mname.invalid && (mname.dirty || mname.touched)\\\"\\r\\n                    >\\r\\n                      required field*\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <fieldset>\\r\\n                  <div class=\\\"input-group\\\" style=\\\"margin-left:26%;\\\">\\r\\n                    <!-- <span class=\\\"input-group-text\\\" id=\\\"checkbox-addon1\\\"> -->\\r\\n                    <input\\r\\n                      type=\\\"checkbox\\\"\\r\\n                      aria-label=\\\"Checkbox for following text input\\\"\\r\\n                      style=\\\"margin-top: 5px;\\\"\\r\\n                      name=\\\"status\\\"\\r\\n                      [(ngModel)]=\\\"newmanagement.stauts\\\"\\r\\n                      #status=\\\"ngModel\\\"\\r\\n                    />\\r\\n                    Active\\r\\n                    <!-- </span> -->\\r\\n                  </div>\\r\\n                </fieldset>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"form-actions center\\\">\\r\\n                <button\\r\\n                  [disabled]=\\\"newmanagementForm.invalid\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n                  (click)=\\\"update()\\\"\\r\\n                >\\r\\n                  <i class=\\\"ft ft-management-check\\\"></i> Update Categories\\r\\n                </button>\\r\\n                <button\\r\\n                  type=\\\"button\\\"\\r\\n                  class=\\\"btn btn-raised btn-danger\\\"\\r\\n                  routerLink=\\\"/account/management\\\"\\r\\n                >\\r\\n                  <i class=\\\"ft ft-x\\\"></i> Go Back\\r\\n                </button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n<!-- // Basic form layout section end -->\\r\\n\"","module.exports = \"<section id=\\\"extended\\\">\\r\\n  <div class=\\\"row text-left\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"content-header\\\">All Categories List</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <h4 class=\\\"card-title\\\">All Expenses Categories List</h4>\\r\\n        </div>\\r\\n        <!-- <fieldset disabled>\\r\\n              <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-raised mr-1 btn-primary\\\">Add New</a>\\r\\n          </fieldset> -->\\r\\n        <div\\r\\n          class=\\\"form-actions\\\"\\r\\n          style=\\\"margin-left: 30px; padding-top: 20px; margin-bottom: -30px;\\\"\\r\\n        >\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-raised btn-info mr-1\\\"\\r\\n            routerLink=\\\"add\\\"\\r\\n            routerLinkActive=\\\"active\\\"\\r\\n          >\\r\\n            Add New\\r\\n            <i class=\\\"fonticon-wrap\\\" class=\\\"icon-management-follow\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-content\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <table class=\\\"table table-responsive-md text-center\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>#</th>\\r\\n                  <th>Category Name</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <td colspan=\\\"1\\\"></td>\\r\\n                <td\\r\\n                  colspan=\\\"4\\\"\\r\\n                  style=\\\"text-align: left;\\\"\\r\\n                  *ngIf=\\\"!managementList.length\\\"\\r\\n                >\\r\\n                  <h2>No data in database</h2>\\r\\n                </td>\\r\\n\\r\\n                <tr *ngFor=\\\"let management of managementList; let i = index\\\">\\r\\n                  <!-- <td><img class=\\\"media-object round-media\\\" src=\\\"{{management.photo}}\\\" alt=\\\"Generic placeholder image\\\"\\r\\n                        style=\\\"height: 45px;\\\" /></td> -->\\r\\n                  <td>{{ i + 1 }}</td>\\r\\n                  <!-- <td>\\r\\n                      <div class=\\\"custom-control custom-checkbox m-0\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"item1\\\">\\r\\n                        <label class=\\\"custom-control-label col-form-label\\\" for=\\\"item1\\\"></label>\\r\\n                      </div>\\r\\n                    </td> -->\\r\\n                  <td>{{ management.name }}</td>\\r\\n                  <td>{{ management.status }}</td>\\r\\n\\r\\n                  <td>\\r\\n                    <div class=\\\"floating-btn\\\">\\r\\n                      <a\\r\\n                        (click)=\\\"edit(management._id)\\\"\\r\\n                        class=\\\"btn btn-warning mr-1 btn-fab\\\"\\r\\n                        ><i class=\\\"icon-pencil\\\"></i\\r\\n                      ></a>\\r\\n                      <a\\r\\n                        (click)=\\\"delete(management._id)\\\"\\r\\n                        class=\\\"btn btn-danger mr-1 btn-fab\\\"\\r\\n                        ><i class=\\\"icon-trash\\\"></i\\r\\n                      ></a>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VucXVpcnkvbWFuYWdlbWVudC9hZGQtbWFuYWdlbWVudC9hZGQtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ManagementService } from \"../services/management.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport swal from \"sweetalert2\";\r\nimport { Management } from \"app/shared/models/management.model\";\r\n\r\n@Component({\r\n  selector: \"app-add-management\",\r\n  templateUrl: \"./add-management.component.html\",\r\n  styleUrls: [\"./add-management.component.scss\"]\r\n})\r\nexport class AddManagementComponent implements OnInit {\r\n  newmanagement: Management;\r\n  submitting: boolean;\r\n\r\n  constructor(\r\n    public managementservice: ManagementService,\r\n    public router: Router,\r\n    public activeRouter: ActivatedRoute\r\n  ) {\r\n    this.newmanagement = new Management({});\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  submit() {\r\n    console.log(\"Submitted>>>>>>>>>\", this.newmanagement);\r\n\r\n    swal\r\n      .fire({\r\n        title: \"Do you want to add the management ?\",\r\n        text: \"New management will be added in Management List\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Add\"\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          //dev\r\n\r\n          this.managementservice.addManagement(this.newmanagement).subscribe(\r\n            (data: any) => {\r\n              swal\r\n                .fire(\"Add!\", \"Management has been added.\", \"success\")\r\n                .then(() => {\r\n                  this.router.navigate([\"account/management\"]);\r\n                });\r\n              //dev\r\n              console.log(\"Dataaa changeddd\", data);\r\n            },\r\n            error => {\r\n              swal.fire(\"Not Added!\", \"There was some error.\", \"error\");\r\n              //dev\r\n              console.log(\"ERRORR\", error);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VucXVpcnkvbWFuYWdlbWVudC9lZGl0LW1hbmFnZW1lbnQvZWRpdC1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { ManagementService } from \"../services/management.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport swal from \"sweetalert2\";\r\nimport { Management } from \"app/shared/models/management.model\";\r\n\r\n@Component({\r\n  selector: \"app-edit-management\",\r\n  templateUrl: \"./edit-management.component.html\",\r\n  styleUrls: [\"./edit-management.component.scss\"]\r\n})\r\nexport class EditManagementComponent implements OnInit {\r\n  updatedmanagement: Management;\r\n  managementid;\r\n\r\n  constructor(\r\n    public managementservice: ManagementService,\r\n    public router: Router,\r\n    public activeRouter: ActivatedRoute\r\n  ) {\r\n    this.updatedmanagement = new Management({});\r\n\r\n    this.managementid = this.activeRouter.snapshot.params[\"id\"];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.managementservice.getManagementById(this.managementid).subscribe(\r\n      (data: any) => {\r\n        console.log(\"managementlist>>\", data);\r\n        this.updatedmanagement = data.data;\r\n      },\r\n      error => {\r\n        console.log(\"cant fetch\");\r\n      }\r\n    );\r\n  }\r\n\r\n  update() {\r\n    console.log(\"Submitted>>>>>>>>>\", this.updatedmanagement);\r\n\r\n    swal\r\n      .fire({\r\n        title: \"Do you want to edit the management details ?\",\r\n        text: \"You won't be able to revert the change\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Confirm\"\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          //dev\r\n\r\n          this.managementservice\r\n            .editManagement(this.updatedmanagement)\r\n            .subscribe(\r\n              (data: any) => {\r\n                swal\r\n                  .fire(\"Edit!\", \"Management User has been edited.\", \"success\")\r\n                  .then(() => {\r\n                    this.router.navigate([\"account/management\"]);\r\n                  });\r\n                //dev\r\n                console.log(\"Dataaa changeddd\", data);\r\n                this.ngOnInit();\r\n              },\r\n              error => {\r\n                swal.fire(\"Not Changed!\", \"There was some error.\", \"error\");\r\n                //dev\r\n                console.log(\"ERRORR\", error);\r\n              }\r\n            );\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ManagementComponent } from \"./management.component\";\r\nimport { AddManagementComponent } from \"./add-management/add-management.component\";\r\nimport { EditManagementComponent } from \"./edit-management/edit-management.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ManagementComponent,\r\n    data: {\r\n      title: \"Management\"\r\n    }\r\n  },\r\n\r\n  {\r\n    path: \"add\",\r\n    component: AddManagementComponent,\r\n    data: {\r\n      title: \"Add Management\"\r\n    }\r\n  },\r\n\r\n  {\r\n    path: \"edit/:id\",\r\n    component: EditManagementComponent,\r\n    data: {\r\n      title: \"Edit Management\"\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManagementRoutingModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VucXVpcnkvbWFuYWdlbWVudC9tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ManagementService } from \"./services/management.service\";\r\nimport swal from \"sweetalert2\";\r\nimport { Management } from \"../../shared/models/management.model\";\r\n\r\n@Component({\r\n  selector: \"app-management\",\r\n  templateUrl: \"./management.component.html\",\r\n  styleUrls: [\"./management.component.scss\"]\r\n})\r\nexport class ManagementComponent implements OnInit {\r\n  managementList: Array<Management>;\r\n\r\n  constructor(\r\n    public managementservice: ManagementService,\r\n    private router: Router\r\n  ) {\r\n    this.managementList = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.managementservice.getManagement().subscribe(\r\n      (data: any) => {\r\n        console.log(\"managementlist>>\", data);\r\n        this.managementList = data.data;\r\n      },\r\n      error => {\r\n        console.log(\"cant fetch\");\r\n      }\r\n    );\r\n  }\r\n\r\n  edit(id) {\r\n    console.log(\"management id>>\", id);\r\n    this.router.navigate([\"account/manage/management/edit/\" + id]);\r\n  }\r\n\r\n  delete(id) {\r\n    swal\r\n      .fire({\r\n        title: \"Do you want to delete the management ?\",\r\n        text: \"You won't be able to revert the deleted management\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Delete\"\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          //dev\r\n\r\n          this.managementservice.deleteManagement(id).subscribe(\r\n            (data: any) => {\r\n              swal.fire(\"Deleted!\", \"Management has been deleted.\", \"success\");\r\n              //dev\r\n              console.log(\"Dataaa changeddd\", data);\r\n              this.ngOnInit();\r\n            },\r\n            error => {\r\n              swal.fire(\"Not Changed!\", \"There was some error.\", \"error\");\r\n              //dev\r\n              console.log(\"ERRORR\", error);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AddManagementComponent } from \"../management/add-management/add-management.component\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ManagementComponent } from \"./management.component\";\r\nimport { ManagementService } from \"./services/management.service\";\r\nimport { EditManagementComponent } from \"./edit-management/edit-management.component\";\r\nimport { ManagementRoutingModule } from \"./management-routing.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    ManagementRoutingModule,\r\n    RouterModule\r\n  ],\r\n\r\n  declarations: [\r\n    ManagementComponent,\r\n    AddManagementComponent,\r\n    EditManagementComponent\r\n  ],\r\n\r\n  providers: [ManagementService]\r\n})\r\nexport class ManagementModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BaseService } from \"./../../../shared/services/base.service\";\r\nimport { Management } from \"app/shared/models/management.model\";\r\n\r\n@Injectable()\r\nexport class ManagementService extends BaseService {\r\n  testurl;\r\n  constructor(public http: HttpClient) {\r\n    super(\"management\");\r\n  }\r\n\r\n  getManagement() {\r\n    return this.http.get(this.url, this.getOptions());\r\n  }\r\n\r\n  getManagementById(id) {\r\n    return this.http.get(this.url + id, this.getOptions());\r\n  }\r\n\r\n  editManagement(data: Management) {\r\n    return this.http.put(\r\n      this.url + data._id,\r\n      { data: data },\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  deleteManagement(id) {\r\n    return this.http.delete(this.url + id);\r\n  }\r\n\r\n  addManagement(data: Management) {\r\n    console.log(\"url>>\", this.url);\r\n    console.log(\"data>>\", data);\r\n\r\n    return this.http.post(this.url, { data: data }, this.getOptions());\r\n  }\r\n}\r\n","export class Management {\r\n  public _id: string;\r\n  public mname: string;\r\n  public status: string;\r\n\r\n  constructor(managementInfo: any) {\r\n    // this._id = userInfo._id || '';\r\n    this.mname = managementInfo.mname || \"\";\r\n    this.status = managementInfo.status || \"\";\r\n  }\r\n}\r\n"],"sourceRoot":""}